
---
apiVersion: v1
kind: Service
metadata:
  name: details
  labels:
    app: details
    service: details
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app.kubernetesio/name: details
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-details
  labels:
    account: details
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: details-v1
  labels:
    app.kubernetesio/name: details
    app.kubernetes.io/version: v1
    app.kubernetes.io/instance: details
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetesio/name: details
      app.kubernetes.io/version: v1
      app.kubernetes.io/instance: details
  template:
    metadata:
      labels:
        app.kubernetesio/name: details
        app.kubernetes.io/version: v1
        app.kubernetes.io/instance: details
        sidecar.istio.io/inject: 'true'
    spec:
      serviceAccountName: bookinfo-details
      containers:
        - name: details
          image: docker.io/istio/examples-bookinfo-details-v1:1.17.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9080
          securityContext:
            runAsUser: 1000
---
##################################################################################################
# Ratings service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: ratings
  labels:
    app: ratings
    service: ratings
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app.kubernetesio/name: ratings
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-ratings
  labels:
    account: ratings
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratings-v1
  labels:
    app.kubernetesio/name: ratings
    app.kubernetes.io/version: v1
    app.kubernetes.io/instance: ratings
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetesio/name: ratings
      app.kubernetes.io/version: v1
      app.kubernetes.io/instance: ratings
  template:
    metadata:
      labels:
        app.kubernetesio/name: ratings
        app.kubernetes.io/version: v1
        app.kubernetes.io/instance: ratings
        sidecar.istio.io/inject: 'true'
    spec:
      serviceAccountName: bookinfo-ratings
      containers:
        - name: ratings
          image: docker.io/istio/examples-bookinfo-ratings-v1:1.17.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9080
          securityContext:
            runAsUser: 1000
---
##################################################################################################
# Reviews service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: reviews
  labels:
    app: reviews
    service: reviews
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app.kubernetesio/name: reviews
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-reviews
  labels:
    account: reviews
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v1
  labels:
    app.kubernetesio/name: reviews
    app.kubernetes.io/version: v1
    app.kubernetes.io/instance: reviews
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetesio/name: reviews
      app.kubernetes.io/version: v1
      app.kubernetes.io/instance: reviews
  template:
    metadata:
      labels:
        app.kubernetesio/name: reviews
        app.kubernetes.io/version: v1
        app.kubernetes.io/instance: reviews
        sidecar.istio.io/inject: 'true'
    spec:
      serviceAccountName: bookinfo-reviews
      containers:
        - name: reviews
          image: docker.io/istio/examples-bookinfo-reviews-v1:1.17.0
          imagePullPolicy: IfNotPresent
          env:
            - name: LOG_DIR
              value: "/tmp/logs"
          ports:
            - containerPort: 9080
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: wlp-output
              mountPath: /opt/ibm/wlp/output
          securityContext:
            runAsUser: 1000
      volumes:
        - name: wlp-output
          emptyDir: {}
        - name: tmp
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v2
  labels:
    app.kubernetesio/name: reviews
    app.kubernetes.io/version: v2
    app.kubernetes.io/instance: reviews
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetesio/name: reviews
      app.kubernetes.io/version: v2
      app.kubernetes.io/instance: reviews
  template:
    metadata:
      labels:
        app.kubernetesio/name: reviews
        app.kubernetes.io/version: v2
        app.kubernetes.io/instance: reviews
        sidecar.istio.io/inject: 'true'
    spec:
      serviceAccountName: bookinfo-reviews
      containers:
        - name: reviews
          image: docker.io/istio/examples-bookinfo-reviews-v2:1.17.0
          imagePullPolicy: IfNotPresent
          env:
            - name: LOG_DIR
              value: "/tmp/logs"
          ports:
            - containerPort: 9080
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: wlp-output
              mountPath: /opt/ibm/wlp/output
          securityContext:
            runAsUser: 1000
      volumes:
        - name: wlp-output
          emptyDir: {}
        - name: tmp
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v3
  labels:
    app.kubernetesio/name: reviews
    app.kubernetes.io/version: v3
    app.kubernetes.io/instance: reviewsZ
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetesio/name: reviews
      app.kubernetes.io/version: v3
      app.kubernetes.io/instance: reviews
  template:
    metadata:
      labels:
        app.kubernetesio/name: reviews
        app.kubernetes.io/version: v3
        app.kubernetes.io/instance: reviews
        sidecar.istio.io/inject: 'true'
    spec:
      serviceAccountName: bookinfo-reviews
      containers:
        - name: reviews
          image: docker.io/istio/examples-bookinfo-reviews-v3:1.17.0
          imagePullPolicy: IfNotPresent
          env:
            - name: LOG_DIR
              value: "/tmp/logs"
          ports:
            - containerPort: 9080
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: wlp-output
              mountPath: /opt/ibm/wlp/output
          securityContext:
            runAsUser: 1000
      volumes:
        - name: wlp-output
          emptyDir: {}
        - name: tmp
          emptyDir: {}
---
##################################################################################################
# Productpage services
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: productpage
  labels:
    app: productpage
    service: productpage
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app: productpage
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-productpage
  labels:
    account: productpage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productpage-v1
  labels:
    app.kubernetesio/name: productpage
    app.kubernetes.io/version: v1
    app.kubernetes.io/instance: productpage
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetesio/name: productpage
      app.kubernetes.io/version: v1
      app.kubernetes.io/instance: productpage
  template:
    metadata:
      labels:
        app.kubernetesio/name: productpage
        app.kubernetes.io/version: v1
        app.kubernetes.io/instance: productpage
        sidecar.istio.io/inject: 'true'
    spec:
      serviceAccountName: bookinfo-productpage
      containers:
        - name: productpage
          image: docker.io/istio/examples-bookinfo-productpage-v1:1.17.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9080
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          securityContext:
            runAsUser: 1000
      volumes:
        - name: tmp
          emptyDir: {}
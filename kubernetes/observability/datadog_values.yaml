# Configure the node-based Agent


datadog:


  confd:
    #####################################
    ### SET UP FOR ISTIO  INTEGRATION ###
    #####################################
    # istio_mesh_endpoint: http://%%host%%:15020/stats/prometheus
    istio.yaml: |-
      ad_identifiers:
        - proxyv2

      init_config:
      instances:
        - use_openmetrics: true
          send_histograms_buckets: true
          istio_mesh_endpoint: http://%%host%%:15020/stats/prometheus
      
      tag_by_endpoint: false
      exclude_labels:
        - source_version
        - destination_version
        - source_canonical_revision
        - destination_canonical_revision
        - source_principal
        - destination_principal
        - source_cluster
        - destination_cluster
        - source_canonical_service
        - destination_canonical_service
        - source_workload_namespace
        - destination_workload_namespace
        - request_protocol
        - connection_security_policy
        - destination_service
        - source_workload

  #####################################
  ### SET UP FOR ISTIO  INTEGRATION ###
  #####################################

  dogstatsd:
    useHostPort: true

  serviceMonitoring:
    enabled: true
  apiKey: 40d7533e4aa0fcd8de622630c5a8efff
  # "Set up the Istio integration"
  clusterName: kubernetes-istio
  site:  us5.datadoghq.com

  systemProbe:
    bpfDebug: true
    enableTCPQueueLength: false
    enableOOMKill: true
    collectDNSStats: false

  kubeStateMetricsCore:
    enabled: true

  clusterChecks:
    enabled: true
  # Receiving traces
  apm:
    enabled: true
    port: 8126


  logs:
    enabled: true
    containerCollectAll: true
  acExclude: "name:datadog-agent name:datadog-cluster-agent"
  # Enable the Process Agent and system probe
  processAgent:
    processCollection: true
  networkMonitoring:
    enabled: true

# Configure the Cluster Agent
clusterAgent:
  enabled: true
  replicas: 2
  createPodDisruptionBudget: true
  # Disable automatic sidecar injection for Datadog Agent pods


  podAnnotations:
    sidecar.istio.io/inject: "false"


  metricsProvider:
    enabled: true
  admissionController:
    enabled: true
    mutateUnlabelled: false


agents:
  # agents.enabled -- You should keep Datadog DaemonSet enabled!

  ## The exceptional case could be a situation when you need to run
  ## single Datadog pod per every namespace, but you do not need to
  ## re-create a DaemonSet for every non-default namespace install.
  ## Note: StatsD and DogStatsD work over UDP, so you may not
  ## get guaranteed delivery of the metrics in Datadog-per-namespace setup!
  enabled: true

  # agents.shareProcessNamespace -- Set the process namespace sharing on the Datadog Daemonset
  shareProcessNamespace: false

  # agents.revisionHistoryLimit -- The number of ControllerRevision to keep in this DaemonSet.
  revisionHistoryLimit: 10

  ## Define the Datadog image to work with







# Disable automatic sidecar injection for Datadog Agent pods
#agents:

  # ?????????
  #localService:
  #  forceLocalServiceEnabled: true
  # ?????????

  podAnnotations:
    sidecar.istio.io/inject: "false"


#providers:
  #gke:
    # providers.gke.autopilot -- Enables Datadog Agent deployment on GKE Autopilot
    #autopilot: false

    # providers.gke.cos -- Enables Datadog Agent deployment on GKE with Container-Optimized OS (COS)
    #cos: true
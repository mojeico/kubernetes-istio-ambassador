apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-deployment
  labels:
    app: client
    version: v2
spec:
  selector:
    matchLabels:
      app: client
      version: v2
  replicas: 1
  template:
    metadata:
      annotations:
        prometheus.istio.io/merge-metrics: "true"
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
        prometheus.io/path: "/metrics"
        proxy.istio.io/config: |
          tracing:
            sampling: 100
            custom_tags:
              my_tag_header:
                header:
                  name: host
      labels:
        #admission.datadoghq.com/enabled: "true"
        app: client
        version: v2
    spec:
      volumes:
        - hostPath:
            path: /var/run/datadog/
          name: apmsocketpath
        - name: tmp
          emptyDir: { }
      serviceAccountName: client-service-account
      containers:
        - name: client-container
          #image: client-grpc:v1
          image: client-grpc:v2
          ports:
            - name: client-port
              containerPort: 3000
          volumeMounts:
            - name: apmsocketpath
              mountPath: /var/run/datadog
            - name: tmp
              mountPath: /tmp

---
apiVersion: v1
kind: Service
metadata:
  name: client
  labels:
    app: client
    service: client
spec:
  selector:
    app: client
  ports:
    - port: 80
      name: http
      #default is TCP
      appProtocol: http
      protocol: TCP
      targetPort: 3000
---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: client-service-account
  labels:
    account: client
automountServiceAccountToken: true

---

apiVersion: getambassador.io/v3alpha1
kind: Mapping
metadata:
  name: grpc-service
spec:
  hostname: "*"
  prefix: /
  service: client:80       # Be explicit about port 80. THIS IS IMPORTANT: see below
  tls: istio-upstream
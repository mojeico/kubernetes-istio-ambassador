apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-client
  labels:
    app: nodejs-client
    version: v7
    tags.datadoghq.com/env: snd
    tags.datadoghq.com/service: nodejs-client
    tags.datadoghq.com/version: v7

spec:
  selector:
    matchLabels:
      app: nodejs-client
      version: v7
  replicas: 1
  template:
    metadata:
      labels:
        admission.datadoghq.com/enabled: "true"
        app: nodejs-client
        version: v7
        tags.datadoghq.com/env: snd
        tags.datadoghq.com/service: nodejs-client
        tags.datadoghq.com/version: v7
    spec:
      volumes:
        - hostPath:
            path: /var/run/datadog/
          name: apmsocketpath
      containers:
        - name: nodejs-client
          image: europe-west3-docker.pkg.dev/mojeico/client/nodejs-client:v7
          ports:
            - name: client-port
              containerPort: 3000
          volumeMounts:
            - name: apmsocketpath
              mountPath: /var/run/datadog
          env:

            #- name: DD_TRACE_AGENT_URL
            #  value: 'unix:///var/run/datadog/apm.socket'


            #- name: DD_AGENT_HOST
            #value: datadog-cluster-agent.datadog.svc.cluster.local
            #value: datadog.datadog.svc.cluster.local
            #valueFrom:
            #fieldRef:
            #fieldPath: status.hostIP



            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_LOGS_INJECTION
              value: "true"
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
            #- name: DD_LOG_LEVEL
            #  value: debug
            #- name: DD_TRACE_AGENT_PORT
            #  value: "8126"
            #- name: DD_DOGSTATSD_PORT
            #  value: "8125"

      #restartPolicy: Never

---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-client-service
spec:
  selector:
    app: nodejs-client
  ports:
    - port: 80
      #default is TCP
      #appProtocol: http
      #protocol: TCP
      targetPort: 3000


---

apiVersion: getambassador.io/v3alpha1
kind: Mapping
metadata:
  name: nodejs-client
spec:
  hostname: "*"
  prefix: /
  service: nodejs-client-service:80       # Be explicit about port 80. THIS IS IMPORTANT: see below
  #tls: istio-upstream
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-client
  labels:
    app.kubernetesio/name: nodejs-client
    app.kubernetes.io/version: v1
    app.kubernetes.io/instance: nodejs-client
    tags.datadoghq.com/env: snd
    tags.datadoghq.com/service: nodejs-client
    tags.datadoghq.com/version: v1
spec:
  selector:
    matchLabels:
      app.kubernetesio/name: nodejs-client
      app.kubernetes.io/version: v1
      app.kubernetes.io/instance: nodejs-client
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetesio/name: nodejs-client
        app.kubernetes.io/version: v1
        app.kubernetes.io/instance: nodejs-client
        sidecar.istio.io/inject: 'true'
    spec:
      containers:
        - name: nodejs-client
          image: mojeico/nodejs-client:v777
          ports:
            - name: client-port
              containerPort: 3000

---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-client-service
spec:
  selector:
    app.kubernetesio/name: nodejs-client
    app.kubernetes.io/version: v1
    app.kubernetes.io/instance: nodejs-client
  ports:
    - port: 80
      targetPort: 3000

---


apiVersion: getambassador.io/v3alpha1
kind: Mapping
metadata:
  name: nodejs-client-mapping
spec:
  hostname: "*"
  prefix: /test1/
  service: nodejs-client-service:80       # Be explicit about port 80. THIS IS IMPORTANT: see below
  tls: istio-upstream     # Originate TLS with the mTLS certificate



PWD  ->  ..../kubernetes-istio-ambassador/kubernetes/base_version



INSTALL  ISTIOD BY HELM - https://istio.io/latest/docs/setup/install/helm/

1) helm repo add istio https://istio-release.storage.googleapis.com/charts
2) helm repo update
3) kubectl create namespace istio-system
4) helm install istio-base istio/base -n istio-system
5) helm install istiod istio/istiod -n istio-system --wait -f ./istio/istio_values.yaml


helm upgrade istiod -f ./istio/istio_values.yaml -n istio-system  istio/istiod



helm list -n istio-system



CREATE LABEL FOR NAMESPACE

1) kubectl label namespace default istio-injection=enabled --overwrite


Install Ambassador Edge Stack with Istio Integration
https://www.getambassador.io/docs/edge-stack/latest/howtos/istio#install-istio
https://www.getambassador.io/docs/edge-stack/latest/tutorials/getting-started

1) kubectl create namespace ambassador
2) kubectl label namespace ambassador istio-injection=enabled --overwrite
3) helm repo add datawire https://app.getambassador.io
4) helm repo update 
5) kubectl apply -f https://app.getambassador.io/yaml/edge-stack/3.4.0/aes-crds.yaml
6) kubectl wait --timeout=90s --for=condition=available deployment emissary-apiext -n emissary-system
7) helm install edge-stack --namespace ambassador -f ./ambassador/ambassador_value.yaml datawire/edge-stack && \
   kubectl -n ambassador wait --for condition=available --timeout=90s deploy -lapp.kubernetes.io/instance=edge-stack


Configure an mTLS TLSContext

1) kubectl apply -f ./istio/istio-upstream-tls.yaml


Set up base ambassador example app

1) kubectl apply -f ./ambassador/listeners.yaml
2) kubectl apply -f ./ambassador/qotm.yaml
3) export LB_ENDPOINT=$(kubectl -n ambassador get svc  edge-stack -o "go-template={{range .status.loadBalancer.ingress}}{{or .ip .hostname}}{{end}}")
4) curl -Lki https://$LB_ENDPOINT/backend/


Set up base ambassador example app

1) kubectl apply -f client.yaml
2) kubectl apply -f server.yaml
3) kubectl apply -f get-server-v1.yaml
4) curl -Lki https://$LB_ENDPOINT/api/v1/grpc



Set up base book-info example app

1) kubectl apply -f client.yaml
2) kubectl apply -f server.yaml
3) kubectl apply -f get-server-v1.yaml
4) curl -Lki https://$LB_ENDPOINT/api/v1/grpc







kubectl apply -f nodejs-client.yaml
kubectl apply -f nodejs-server.yaml


## ---




INSTALL  ISTIOD BY HELM - https://istio.io/latest/docs/setup/install/helm/

1) helm repo add istio https://istio-release.storage.googleapis.com/charts
2) helm repo update
3) kubectl create namespace istio-system
4) helm install istio-base istio/base -n istio-system
5) helm install istiod istio/istiod -n istio-system --wait -f ./istio/istio_values_prometheus_grafana_jaeger.yaml

helm upgrade istiod -f ./istio/istio_values_prometheus_grafana_jaeger.yaml -n istio-system  istio/istiod

kubectl label namespace default istio-injection=enabled --overwrite



---- istio ingress ----

kubectl create namespace istio-ingress
kubectl label namespace istio-ingress istio-injection=enabled
helm install istio-ingress istio/gateway -n istio-ingress --wait


kubectl -n istio-ingress  get service istio-ingress  -o jsonpath='{.spec.ports[?(@.name=="http2")].port}'


---- istio ingress ----





helm upgrade istiod -f ./istio/istio_values.yaml -n istio-system  istio/istiod



1) kubectl label namespace default istio-injection=enabled --overwrite



1) kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml


